AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates a Microsoft two-tier PKI infrastructure comprising an
  offline root CA and a subordinate issuing CA. **WARNING** This template creates
  Amazon EC2 Windows instances and related resources. You will be billed for the
  AWS resources used if you create a stack from this template. (qs-1qpclo7fi)
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Parameters for deploying into an existing VPC"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Domain-administrator credentials
        Parameters:
          - DomainAdminUser
          - DomainAdminPassword
      - Label:
          default: Active Directory configuration
        Parameters:
          - DomainDNSName
          - DomainNetBIOSName
          - domaincontrollers
      - Label:
          default: EC2 details
        Parameters:
          - RootCASubnet
          - SubCASubnet
          - DomainMemberSG
          - ServerSize
          - KeyPairName
      - Label:
          default: AD CS details
        Parameters:
          - RootCACommonName
          - SubCACommonName
          - RootCAValidityPeriod
          - SubCAValidityPeriod
      - Label:
          default: IAM Permissions Boundary
        Parameters:
          - PermissionsBoundaryArn
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      DomainAdminUser:
        default: Domain-administrator user
      DomainAdminPassword:
        default: Domain-administrator password
      DomainDNSName:
        default: 'Domain DNS name'
      DomainNetBIOSName:
        default: 'Domain NetBios name'
      domaincontrollers:
        default: Domain controller IP addresses
      ServerSize:
        default: EC2 instance size
      KeyPairName:
        default: Key pair name
      RootCASubnet:
        default: Subnet for the root CA
      SubCASubnet:
        default: Subnet for the subordinate CA
      DomainMemberSG:
        default: Security group for Active Directory domain members
      RootCACommonName:
        default: Common name for the root CA
      SubCACommonName:
        default: Common name for the subordinate CA
      RootCAValidityPeriod:
        default: Validity period for the root CA
      SubCAValidityPeriod:
        default: Validity period for the subordinate CA
      PermissionsBoundaryArn:
        default: ARN of an IAM Permissions boundary policy
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:
  DomainDNSName:
    AllowedPattern: '[a-zA-Z0-9\-]+\..+'
    Default: example.com
    Description: Fully qualified domain name (FQDN) of the forest root domain.
    MaxLength: '25'
    MinLength: '2'
    Type: String
  DomainNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9]+'
    Default: example
    Description: NetBIOS name of the domain (up to 15 characters) for users of earlier
      versions of Windows.
    MaxLength: '15'
    MinLength: '1'
    Type: String
  DomainAdminUser:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: Admin
    Description: User name for the account that will be added as the domain administrator.
      This is separate from the default "Administrator" account.
    MaxLength: '25'
    MinLength: '5'
    Type: String
  DomainAdminPassword:
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the domain-administrator user. Must be at least 8 characters
      and contain letters, numbers, and symbols.
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  domaincontrollers:
    Type: String
    Description: A comma-delimited list of domain controller IP addresses.
    Default: ''
  RootCACommonName:
    Type: String
    Description: 'Examples: "rca" or "rootca."'
    Default: ''
  SubCACommonName:
    Type: String
    Description: 'Examples: "subca" or "ca."'
    Default: ''
  RootCAValidityPeriod:
    Type: String
    Description: Enter a value in years.
    Default: '10'
  SubCAValidityPeriod:
    Type: String
    Description: Enter a value in years.
    Default: '1'
  KeyPairName:
    Description: Name of the key pair that you will use to securely connect to your EC2 instance
      after it launches. The key pair consists of a private key and a public key.
    Type: AWS::EC2::KeyPair::KeyName
  ServerSize:
    Description: Choose "Medium" (C5 large) or "Large" (C5 xlarge) if you don't want "Small" (T3 small).
    NoEcho: 'false'
    Type: String
    Default: Small
    AllowedValues:
      - Small
      - Medium
      - Large
  RootCASubnet:
    Description: Private subnet for the root CA EC2 instance.
    Type: AWS::EC2::Subnet::Id
    Default: ''
  SubCASubnet:
    Description: Private subnet for the subordinate CA EC2 instance.
    Type: AWS::EC2::Subnet::Id
    Default: ''
  DomainMemberSG:
    Description: AWS security group for Active Directory domain members.
    Type: AWS::EC2::SecurityGroup::Id
    Default: ''
  PermissionsBoundaryArn:
    Description: Optional ARN of an IAM Permissions boundary policy if you are required to use a permissions boundary whenever you create an IAM role.
    Type: String
    Default: ''
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: Name of the S3 bucket for your copy of the Quick Start assets. Keep the default name unless you are customizing the template. Changing the name updates code references to point to a new Quick Start location. This name can include numbers, lowercase letters, uppercase letters, and hyphens, but do not start or end with a hyphen (-). See https://aws-quickstart.github.io/option1.html.
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. Keep the default Region unless you are customizing the template. Changing this Region updates code references to point to a new Quick Start location. When using your own bucket, specify the Region. See https://aws-quickstart.github.io/option1.html.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-microsoft-pki/
    Description: S3 key prefix that is used to simulate a directory for your copy of the Quick Start assets. Keep the default prefix unless you are customizing the template. Changing this prefix updates code references to point to a new Quick Start location. This prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slashes (/). See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html and https://aws-quickstart.github.io/option1.html.
    Type: String
Mappings:
  EC2Sizing:
    EC2list:
      Small: t3.small
      Medium: c5.large
      Large: c5.xlarge
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  UsingPermissionsBoundary: !Not [!Equals [ !Ref 'PermissionsBoundaryArn', '' ] ]
Resources:
  secret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Temporarily store domain credentials with encryption for domain
        join and DNS operations.
      SecretString: !Sub
        - '{"domainuser":"${user}","domainPwd":"${pwd}"}'
        - user: !Base64
            Ref: DomainAdminUser
          pwd: !Base64
            Ref: DomainAdminPassword
  role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      PermissionsBoundary: !If [ UsingPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref 'AWS::NoValue' ]
      MaxSessionDuration: 3600
      Path: /
  policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AWS-ADCS-SSMSecretParam
      Roles:
        - !Ref 'role'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: SSMParameters
            Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:PutParameter
              - ssm:DeleteParameter
            Resource:
              - !Sub
                - arn:aws:ssm:${region}:${account}:parameter/${cnsubca}.${fqdn}/adcs-subca/${cnsubca}.${fqdn}_CA-REQ.req
                - region: !Ref 'AWS::Region'
                  account: !Ref 'AWS::AccountId'
                  cnsubca: !Ref 'SubCACommonName'
                  fqdn: !Ref 'DomainDNSName'
              - !Sub
                - arn:aws:ssm:${region}:${account}:parameter/${cnsubca}.${fqdn}/adcs-subca/${cnsubca}.${fqdn}-b64.cer
                - region: !Ref 'AWS::Region'
                  account: !Ref 'AWS::AccountId'
                  cnsubca: !Ref 'SubCACommonName'
                  fqdn: !Ref 'DomainDNSName'
              - !Sub
                - arn:aws:ssm:${region}:${account}:parameter/${cnsubca}.${fqdn}/adcs-subca/${cnrca}.${fqdn}-der.cer
                - region: !Ref 'AWS::Region'
                  account: !Ref 'AWS::AccountId'
                  cnsubca: !Ref 'SubCACommonName'
                  cnrca: !Ref 'RootCACommonName'
                  fqdn: !Ref 'DomainDNSName'
              - !Sub
                - arn:aws:ssm:${region}:${account}:parameter/${cnsubca}.${fqdn}/adcs-subca/${cnrca}.${fqdn}-p7b.p7b
                - region: !Ref 'AWS::Region'
                  account: !Ref 'AWS::AccountId'
                  cnsubca: !Ref 'SubCACommonName'
                  cnrca: !Ref 'RootCACommonName'
                  fqdn: !Ref 'DomainDNSName'
              - !Sub
                - arn:aws:ssm:${region}:${account}:parameter/${cnsubca}.${fqdn}/adcs-subca/${cnrca}.${fqdn}-b64.cer
                - region: !Ref 'AWS::Region'
                  account: !Ref 'AWS::AccountId'
                  cnsubca: !Ref 'SubCACommonName'
                  cnrca: !Ref 'RootCACommonName'
                  fqdn: !Ref 'DomainDNSName'
              - !Sub
                - arn:aws:ssm:${region}:${account}:parameter/${cnsubca}.${fqdn}/adcs-subca/${cnrca}.${fqdn}.crl
                - region: !Ref 'AWS::Region'
                  account: !Ref 'AWS::AccountId'
                  cnsubca: !Ref 'SubCACommonName'
                  cnrca: !Ref 'RootCACommonName'
                  fqdn: !Ref 'DomainDNSName'
          - Sid: SSMSecrets
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DeleteSecret
            Resource:
              - !Ref 'secret'
  profile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'role'
  rootca:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/EC2.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        name: !Join
          - '-'
          - - !Ref 'DomainNetBIOSName'
            - !Ref 'RootCACommonName'
        size: !FindInMap
          - EC2Sizing
          - EC2list
          - !Ref 'ServerSize'
        key: !Ref 'KeyPairName'
        iam: !Ref 'profile'
        public: 'False'
        subnet: !Ref 'RootCASubnet'
        sg: !Ref 'DomainMemberSG'
  subca:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/EC2.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        name: !Join
          - '-'
          - - !Ref 'DomainNetBIOSName'
            - !Ref 'SubCACommonName'
        size: !FindInMap
          - EC2Sizing
          - EC2list
          - !Ref 'ServerSize'
        key: !Ref 'KeyPairName'
        iam: !Ref 'profile'
        public: 'False'
        subnet: !Ref 'SubCASubnet'
        sg: !Ref 'DomainMemberSG'
  documentrootca:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/RCA.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
  documentrootcarun:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/RCA-Run.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        ssmdocname: !GetAtt 'documentrootca.Outputs.docname'
        ec2targetrca: !GetAtt 'rootca.Outputs.id'
        domainfqdn: !Ref 'DomainDNSName'
        domainnetbios: !Ref 'DomainNetBIOSName'
        domaincnrca: !Ref 'RootCACommonName'
        domaincnsubca: !Ref 'SubCACommonName'
        rcavalidity: !Ref 'RootCAValidityPeriod'
        subcavalidity: !Ref 'SubCAValidityPeriod'
  documentsubca:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/SubCA.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
  documentsubcarun:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/SubCA-Run.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        ssmdocname: !GetAtt 'documentsubca.Outputs.docname'
        ec2targetsubca: !GetAtt 'subca.Outputs.id'
        domainfqdn: !Ref 'DomainDNSName'
        domainnetbios: !Ref 'DomainNetBIOSName'
        domaincontrollers: !Ref 'domaincontrollers'
        domaincredentials: !Ref 'secret'
        domaincnrca: !Ref 'RootCACommonName'
        domaincnsubca: !Ref 'SubCACommonName'
        domainiprca: !GetAtt 'rootca.Outputs.ip'
        domainipsubca: !GetAtt 'subca.Outputs.ip'
